models:

  User:
    id: id
    name: string
    email: string unique
    email_verified_at: timestamp nullable
    password: string
    remember_token: string nullable
    image: string
    about: text
  #    relationships:
  #      hasMany: Video, User:teacher_id


  Course:
    id: id
    name: string
    image: string
    price: integer
    period: integer nullable
    published_at: timestamp nullable

  Payment:
    id: id
    type: enum:cash,card,online
    status: enum:not-payed,rejected,payed
    amount: bigInteger
    user_id: bigInteger foreign:users.id
    course_id: bigInteger foreign:courses.id nullable
  #    relationships:
  #      belongsTo: Course

  Order:
    id: id
    student_id: bigInteger foreign:students.id
    course_id: bigInteger foreign:courses.id
    amount: bigInteger
    payyed: integer
    period: integer
    payment_id: bigInteger foreign:payments.id
    relationships:
      belongsTo: Course, User

  Video:
    id: id
    course_id: bigInteger foreign:courses.id
    author_id: bigInteger foreign:users.id
    video: string
    processed: string
    ordinal_number: integer
  #    relationships:
  #      belongsTo: Course, User:author_id

  Task:
    id: id
    video_id: bigInteger foreign:videos.id
    name: string
  #    relationships:
  #      belongsTo: Video

  Direction:
    id: id
    name: string
    description: text

  StudentVideo:
    id: id
    student_id: bigInteger foreign:users.id
    video_id: bigInteger foreign:videos.id
    seen: integer
    task_completed: boolean
  #    relationships:
  #      belongsTo: Video, User:student_id

  TeacherDirection:
    id: id
    teacher_id: integer index foreign:users.id
    direction_id: integer index foreign:directions.id
  #    relationships:
  #      belongsTo: Direction, User:teacher_id

  CourseDirection:
    id: id
    course_id: integer index foreign:courses.id
    direction_id: integer index foreign:directions.id
  #    relationships:
  #      belongsTo: Direction, Course

  CourseTeacher:
    id: id
    course_id: integer index foreign:courses.id
    teacher_id: integer index foreign:users.id
  #    relationships:
  #      belongsTo: Course, User:teacher_id

  CourseStudent:
    id: id
    course_id: integer index foreign:courses.id
    studernt_id: integer index foreign:users.id
#    relationships:
#      belongsTo: Course, User:teacher_id

controllers:

  Api\v1\Admin\User:
  index:
    resource: paginate:users
  store:
    validate: name, email
    save: user
    resource: user
  update:
    validate: user
    update: user
    flash: user.id
    respond: user
  show:
    find: user.id
    respond: user
#  Api\v1\Admin\Course:
#    resource: api
#  Api\v1\Admin\Task:
#    resource: api
#  Api\v1\Admin\Direction:
#    resource: api
#  Api\v1\Admin\Video:
#    resource: api
#
#    store:
#      validate: course_id, author_id, video, ordinal_number
#      save: video
#      send: ReviewNotification to:video.author with:video
#      dispatch: ProcessMedia with:video
#      fire: NewVideo with:video
#      flash: video.name
#      redirect: video.index
